{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoWrapper","styled","div","AppTile","Content","TodoTemplate","children","TodoInsertWrapper","form","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","type","placeholder","TodoItemWrapper","CheckBox","Remove","TodoListItem","todo","onRemove","onToggle","id","text","checked","className","cn","onClick","TodoListWrapper","TodoList","todos","map","App","setTodos","nextId","useRef","current","concat","filter","rootElement","document","getElementById","createRoot","render"],"mappings":"qNAWMA,EAAcC,IAAOC,IAAV,iHAOXC,EAAUF,IAAOC,IAAV,2JASPE,EAAUH,IAAOC,IAAV,oDAIEG,EA5BM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,eAACN,EAAD,WACE,cAACG,EAAD,wBACA,cAACC,EAAD,UAAUE,Q,OC6BVC,EAAoBN,IAAOO,KAAV,imBAiCRC,EAjEI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,uBAAY,SAACC,GAC5BH,EAASG,EAAEC,OAAOL,SACjB,IAGGM,EAAWH,uBACf,SAACC,GACCN,EAASE,GACTC,EAAS,IACTG,EAAEG,mBAEJ,CAACT,EAAUE,IAGb,OACE,eAACL,EAAD,CAAmBW,SAAUA,EAA7B,UACE,uBACEE,KAAK,OACLC,YAAY,qDACZT,MAAOA,EACPE,SAAUA,IAEZ,wBAAQM,KAAK,SAAb,SACE,cAAC,IAAD,U,iBCFFE,EAAkBrB,IAAOC,IAAV,kMAYfqB,EAAWtB,IAAOC,IAAV,kVAuBRsB,EAASvB,IAAOC,IAAV,0KAWGuB,EAjEM,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9BC,EAAsBH,EAAtBG,GAAIC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAElB,OACE,eAACT,EAAD,WACE,eAACC,EAAD,CACES,UAAWC,IAAG,WAAY,CAAEF,YAC5BG,QAAS,kBAAMN,EAASC,IAF1B,UAIGE,EAAU,cAAC,IAAD,IAAiB,cAAC,IAAD,IAC5B,qBAAKC,UAAU,OAAf,SAAuBF,OAEzB,cAACN,EAAD,CAAQU,QAAS,kBAAMP,EAASE,IAAhC,SACE,cAAC,IAAD,UCHFM,EAAkBlC,IAAOC,IAAV,2FAMNkC,EArBE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOV,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnC,OACE,cAACO,EAAD,UACGE,EAAMC,KAAI,SAACZ,GAAD,OACT,cAAC,EAAD,CACEA,KAAMA,EAENC,SAAUA,EACVC,SAAUA,GAFLF,EAAKG,UC4DLU,EAjEH,WACV,MAA0B5B,mBAAS,CACjC,CACEkB,GAAI,EACJC,KAAM,gBACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,gBACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,gBACNC,SAAS,KAdb,mBAAOM,EAAP,KAAcG,EAAd,KAoBMC,EAASC,iBAAO,GAGhBhC,EAAWK,uBACf,SAACe,GACC,IAAMJ,EAAO,CACXG,GAAIY,EAAOE,QACXb,OACAC,SAAS,GAEXS,EAASH,EAAMO,OAAOlB,IACtBe,EAAOE,SAAW,IAEpB,CAACN,IAIGV,EAAWZ,uBACf,SAACc,GACCW,EAASH,EAAMQ,QAAO,SAACnB,GAAD,OAAUA,EAAKG,KAAOA,QAE9C,CAACQ,IAIGT,EAAWb,uBACf,SAACc,GACCW,EACEH,EAAMC,KAAI,SAACZ,GAAD,OACRA,EAAKG,KAAOA,EAAZ,2BAAsBH,GAAtB,IAA4BK,SAAUL,EAAKK,UAAYL,QAI7D,CAACW,IAGH,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAY3B,SAAUA,IACtB,cAAC,EAAD,CAAU2B,MAAOA,EAAOV,SAAUA,EAAUC,SAAUA,QC5DtDkB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.b7849ec8.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return (\r\n    <TodoWrapper>\r\n      <AppTile>Todo List</AppTile>\r\n      <Content>{children}</Content>\r\n    </TodoWrapper>\r\n  );\r\n};\r\nconst TodoWrapper = styled.div`\r\n  width: 512px;\r\n  margin: 6rem auto 0;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AppTile = styled.div`\r\n  background: #22b8cf;\r\n  color: #fff;\r\n  height: 4rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  background: #ffffff;\r\n`;\r\n\r\nexport default TodoTemplate;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoInsert = ({ onInsert }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  //onSubmit 이벤트 설정\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      onInsert(value);\r\n      setValue(''); //value값 초기화\r\n      e.preventDefault(); //새로고침을 발생하므로 이 함수를 호출\r\n    },\r\n    [onInsert, value],\r\n  );\r\n\r\n  return (\r\n    <TodoInsertWrapper onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"할 일을 입력하세요\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <button type=\"submit\">\r\n        <MdAdd />\r\n      </button>\r\n    </TodoInsertWrapper>\r\n  );\r\n};\r\n\r\nconst TodoInsertWrapper = styled.form`\r\n  display: flex;\r\n  background: #495057;\r\n  input {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    padding: 0.5rem;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n    color: #fff;\r\n    &::placeholder {\r\n      color: #dee2e6;\r\n    }\r\n    flex: 1;\r\n  }\r\n  button {\r\n    background: #868296;\r\n    outline: none;\r\n    border: none;\r\n    color: #fff;\r\n    padding: 0 1rem;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    transition: 0.1s background ease-in;\r\n    &:hover {\r\n      background: #adb5bd;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TodoInsert;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  MdCheckBox,\r\n  MdCheckBoxOutlineBlank,\r\n  MdRemoveCircleOutline,\r\n} from 'react-icons/md';\r\nimport cn from 'classnames';\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\r\n  const { id, text, checked } = todo;\r\n\r\n  return (\r\n    <TodoItemWrapper>\r\n      <CheckBox\r\n        className={cn('checkbox', { checked })}\r\n        onClick={() => onToggle(id)}\r\n      >\r\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n        <div className=\"text\">{text}</div>\r\n      </CheckBox>\r\n      <Remove onClick={() => onRemove(id)}>\r\n        <MdRemoveCircleOutline />\r\n      </Remove>\r\n    </TodoItemWrapper>\r\n  );\r\n};\r\n\r\nconst TodoItemWrapper = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  &:nth-child(even) {\r\n    background: #f8f9fa;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid #dee2e6;\r\n  }\r\n`;\r\n\r\nconst CheckBox = styled.div`\r\n  cursor: pointer;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  svg {\r\n    font-size: 1.5rem;\r\n  }\r\n  .text {\r\n    margin-left: 0.5rem;\r\n    flex: 1;\r\n  }\r\n  &.checked {\r\n    svg {\r\n      color: #22b8cf;\r\n    }\r\n    .text {\r\n      color: #adb5bd;\r\n      text-decoration: line-through;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  color: #ff6b6b;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff8787;\r\n  }\r\n`;\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport TodoListItem from 'components/TodoListItem';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  return (\r\n    <TodoListWrapper>\r\n      {todos.map((todo) => (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={todo.id}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </TodoListWrapper>\r\n  );\r\n};\r\n\r\nconst TodoListWrapper = styled.div`\r\n  min-height: 320px;\r\n  max-height: 513px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport default TodoList;\r\n","import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from 'components/TodoTemplate';\nimport TodoInsert from 'components/TodoInsert';\nimport TodoList from 'components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '할일1',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '할일2',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '할일3',\n      checked: false,\n    },\n  ]);\n\n  //고윳값으로 사용될 id\n  //ref를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  //onInsert함수 만들기\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1; //nextID 1씩 더하기\n    },\n    [todos],\n  );\n\n  //항목 지우기\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos],\n  );\n\n  //onToggle 체크박스\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport 'index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"],"sourceRoot":""}